<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.newness.efficient.attendance.user.mapper.UserMapper">

    <insert id="addGroup">
        insert into sys_group (group_id, group_name, create_date)
        values (#{groupId}, #{groupName}, now())
    </insert>

    <update id="updateGroup">
        update sys_group
        set group_name = #{groupName}
        where group_id = #{groupId}
    </update>

    <insert id="addMember">
        insert into sys_group_user (group_id, username, leader)
        values (#{groupId}, #{username}, #{leader});
    </insert>

    <select id="getUsers" resultType="com.newness.efficient.attendance.user.bo.Personnel">
        select user_id, user_name, full_name, description, state, DATE_FORMAT(entry_date,'%Y-%m-%d') entry_date
        from sys_user
        <where>
            <if test="query != null and query != ''">
                instr(user_name, #{query}) > 0
                or instr(full_name, #{query}) > 0
            </if>
        </where>
    </select>

    <select id="getGroupsNMembers" resultType="java.util.Map">
        select g.group_id, g.group_name, m.username, m.leader, u.full_name
        from sys_group_user m
                 left join sys_group g
                           on m.group_id = g.group_id
                 left join sys_user u
                           on m.username = u.user_name
        order by m.group_id
    </select>

    <select id="getUsersGrid" resultType="java.util.Map">
        select u.user_id,
               user_name,
               full_name,
               u.description,
               cast(u.state as char(1)) state,
               d.value                             state_name,
               DATE_FORMAT(entry_date, '%Y-%m-%d') entry_date,
               c.role_ids,
               c.role_descriptions
        from sys_user u
                 left join sys_dictionary d
                           on d.code = u.state
                               and d.enable = 1
                 left join (select sru.user_id,
                                   group_concat(sru.role_id)    role_ids,
                                   group_concat(sr.description) role_descriptions
                            from sys_role_user sru
                                     left join sys_role sr on sru.role_id = sr.role_id
                            group by sru.user_id) c
                           on c.user_id = u.user_id
    </select>

    <select id="getRoleUser" resultType="java.util.Map">
        select sru.user_id, group_concat(sru.role_id), group_concat(sr.description)
        from sys_role_user sru
                 left join sys_role sr on sru.role_id = sr.role_id
        group by sru.user_id
    </select>

</mapper>
